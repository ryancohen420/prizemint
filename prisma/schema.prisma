generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// A user who signs in with Ethereum (SIWE)
model User {
  id        String    @id @default(cuid())
  address   String    @unique
  username  String?   @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  raffles   Raffle[]
}

/// Store nonces for SIWE message verification
model Nonce {
  id        String   @id        // the SIWE nonce value
  value     String               // optional extra data
  createdAt DateTime @default(now())
}

/// A collectible raffle
model Raffle {
  id            String   @id @default(uuid())
  title         String
  description   String
  imageUrl      String
  priceEth      Float
  ticketSupply  Int      @default(0)
  ticketsSold   Int      @default(0)
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
  endsAt        DateTime?
  winnerId      String?

  ownerId       String?
  owner         User?    @relation(fields: [ownerId], references: [id])
}


